{
    "collab_server" : "",
    "contents" : "# Title: Export ELToD Ouput files\n#\n# Description: \n# Writes pull link volumes to excel.\n# Styles and formulae can also be set from script but it's rather much \n# easier to use a predefined excel template and write to it. \n#  \n# \n# Amar Sarvepalli, date:07-21-2017, venkat.sarvepalli@dot.state.fl.us\n#\n#======================================================================\n# User settings\n#=====================================================================\n\n# model directory, scenarios and years\nold_ppath     <- \"M:\\\\Projects\\\\Veterans ELToDv2.2 2017\"\nnew_ppath     <- \"M:\\\\Projects\\\\Veterans ELToDv2.3 2017-0628\"\n\npath <- c(old_ppath, new_ppath)\n\nscenarios <- c(\"Y2020Rev\", \"Y2040Rev\")\nYears     <- c(2020, 2040)\n\n# input files\nfilenames <- paste0(\"VOL\",c(1:24),\".csv\")\npull_link <- \"Pull_Link_Dir.csv\"\nexcel_template <- \"Template.xlsx\"\n\n# output excel files, segment starting rows\nold_outfiles <- c(\"Output_2020A1.xlsx\", \"Output_2040A1.xlsx\")\nnew_outfiles <- c(\"Output_2020A2.xlsx\", \"Output_2040A2.xlsx\")\noutfiles <- list(old_outfiles, new_outfiles)\n\nsegments <- c(1,2)\nseg_data_start_rows <- c(6, 51)\nsheet_name = \"Output\"\n\n#======================================================================\n# Load libraries & read data files\n#======================================================================\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(foreign)\nlibrary(data.table)\nlibrary(XLConnect)\n\n\nfor (p in 1:length(path)) {\n  \n  # load all files\n  for (s in 1:length(scenarios)){\n    for (f in 1:length(filenames)){\n      \n      # read all files \n      # df_vol <- read.csv(paste(path,scenarios[s],filenames[f], sep =\"\\\\\"))\n      df_vol <- read.csv(paste(path[p],\"Base\",scenarios[s],filenames[f], sep =\"\\\\\"))\n      \n      # append scenario Year and Hour\n      df_vol$Hour <- f\n      df_vol$Year <- Years[s]\n      \n      # consolidate all data\n      ifelse(f == 1 & s == 1, df <- df_vol, df <- rbind(df,df_vol)) \n    }\n  }\n  \n  \n  #======================================================================\n  # Process data \n  #======================================================================\n  df_pulllink <- read.csv(pull_link) %>%\n    mutate(key = paste(A, B, sep = \"-\")) %>%\n    select(-A, -B, -PULL)\n  \n  # select only specific columns\n  df     <- df %>% \n    mutate(key = paste(A, B, sep = \"-\")) %>% \n    left_join(df_pulllink, by = \"key\")  %>%\n    mutate(LType_Dir = paste(LType, Dir, sep =\"_\")) %>% \n    select(Year, Seg, Hour, LType_Dir,\n           VOL = TOTAL_VOL, CSPD, TOLL, VC_RATIO) %>%          \n    gather( -Year, -Seg, -LType_Dir, -Hour,  key = name, value = value ) %>%\n    mutate(LType_Dir_name =  paste(LType_Dir, name, sep =\"_\")) %>%\n    select(-LType_Dir, -name) %>%\n    spread(LType_Dir_name, value) %>%\n    mutate(EL_NB_SHARE = EL_NB_VOL / (GU_NB_VOL + EL_NB_VOL),\n           EL_SB_SHARE = EL_SB_VOL / (GU_SB_VOL + EL_SB_VOL),\n           Corridor = GU_NB_VOL + EL_NB_VOL + GU_SB_VOL + EL_SB_VOL) %>%\n    arrange(Year, Seg, Hour)\n  \n  \n  # select only specific columns          \n  dir_ltype  <- c(\"GU_NB\",\"GU_SB\", \"EL_NB\", \"EL_SB\")\n  dir_ELtype <- dir_ltype[3:4]\n  df_order   <- c(\"Year\", \"Seg\", \"Hour\", \n                  paste0(dir_ltype,\"_VOL\"), \n                  \"Corridor\",\n                  paste0(dir_ELtype,\"_SHARE\"),\n                  paste0(dir_ltype,\"_VC_RATIO\"), \n                  paste0(dir_ltype,\"_CSPD\"), \n                  paste0(dir_ELtype,\"_TOLL\"))\n  \n  df <- df %>% select(df_order)  \n  \n  \n  #======================================================================\n  # Write to Excel\n  #======================================================================\n  \n  for(s in 1:length(scenarios)){\n    for(d in segments){\n      # create excel output\n      excel_out <- paste(path[p],\"Base\",scenarios[s],outfiles[[p]][s], sep =\"\\\\\") \n      file.copy(excel_template, excel_out) \n      \n      # Get data by segments\n      df_seg <- df %>% \n        filter(Year == Years[s], Seg == segments[d]) %>%\n        select(-Year, -Seg, -Hour)\n      \n      # write to excel\n      writeWorksheetToFile(excel_out, data = df_seg,\n                           sheet = sheet_name, \n                           # sheet = \"sheet_name\", \n                           startRow = seg_data_start_rows[d],\n                           startCol = 2, \n                           header = FALSE, \n                           rownames = NULL,\n                           styleAction = XLC$STYLE_ACTION.NONE,\n                           clearSheets = FALSE)\n    }\n  }\n}\n\n",
    "created" : 1500648276662.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4191683037",
    "id" : "6DADCD96",
    "lastKnownWriteTime" : 1501606979,
    "last_content_update" : 1501606979838,
    "path" : "M:/Projects/Veterans ELToDv2.3 2017-0628/Reporting/ELTOD Output-CSV via Rscript/Export ELTOD Output.R",
    "project_path" : "Export ELTOD Output.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}